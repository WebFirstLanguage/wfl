// Directory Listing Feature Demo
// This demonstrates the new recursive and filtered file listing capabilities

display "=== WFL Directory Listing Features Demo ==="
display ""

// Feature 1: Basic file listing (existing functionality)
display "1. Basic listing of current directory:"
store files as list files in "."
store fileCount as 0
for each f in files:
    change fileCount to fileCount plus 1
end for
display "   Found " with fileCount with " files"
display ""

// Feature 2: Filtered listing with single extension
display "2. List only .wfl files in TestPrograms:"
store wflFiles as list files in "./TestPrograms" with extension ".wfl"
store wflCount as 0
for each f in wflFiles:
    change wflCount to wflCount plus 1
end for
display "   Found " with wflCount with " WFL files"
display ""

// Feature 3: Recursive directory listing
display "3. List all files recursively in src directory:"
store allFiles as list files in "./src" recursively
store totalCount as 0
for each f in allFiles:
    change totalCount to totalCount plus 1
end for
display "   Found " with totalCount with " total files (recursive)"
display ""

// Feature 4: Recursive with extension filter
display "4. List only .rs files recursively in src:"
store rustFiles as list files in "./src" recursively with extension ".rs"
store rustCount as 0
for each f in rustFiles:
    change rustCount to rustCount plus 1
end for
display "   Found " with rustCount with " Rust source files"
display ""

// Feature 5: Using variables for extensions
display "5. Dynamic extension filtering:"
store targetExt as ".toml"
store configFiles as list files in "." with extension targetExt
store configCount as 0
for each f in configFiles:
    change configCount to configCount plus 1
    display "   Config file: " with f
end for
display "   Total: " with configCount with " TOML files"
display ""

// Feature 6: Practical use case - find all test files
display "6. Finding test files:"
store testExtension as ".wfl"
store testFiles as list files in "./TestPrograms" with extension testExtension
store testCount as 0
display "   Test programs:"
for each testFile in testFiles:
    change testCount to testCount plus 1
    if testCount is less than 6 then:
        display "     - " with testFile
    end if
end for
if testCount is greater than 5 then:
    display "     ... and " with testCount minus 5 with " more"
end if
display ""

display "=== Demo Complete ==="
display ""
display "Summary of new features:"
display "  - list files in <path> recursively"
display "  - list files in <path> with extension <ext>"
display "  - list files in <path> recursively with extension <ext>"
display "  - Extension can be a string literal or variable"
display ""
display "Note: Multiple extensions syntax with list is still being refined"