// Pattern Matching Test Program

display "Testing Pattern Matching"
display "------------------------"

// Basic pattern matching
store phone number as "555-123-4567"
store phone pattern as pattern "{3 digits}-{3 digits}-{4 digits}"

check if phone number matches pattern phone pattern:
    display "Valid phone number format!"
otherwise:
    display "Invalid phone number format!"
end check

// Testing with different patterns
store email as "user@example.com"
store email pattern as pattern "{one or more letters or digits}@{one or more letters or digits}.{2 or 3 letters}"

check if email matches pattern email pattern:
    display "Valid email format!"
otherwise:
    display "Invalid email format!"
end check

// Pattern finding with placeholders
store date as "12/25/2023"
store date pattern as pattern "{month}/{day}/{year}"

store date parts as find pattern date pattern in date
display "Month: " with date parts["month"]
display "Day: " with date parts["day"]
display "Year: " with date parts["year"]

// Pattern replacement
store credit card as "Credit card: 1234-5678-9012-3456"
store censored as replace pattern "{4 digits}-{4 digits}-{4 digits}-{4 digits}" with "XXXX-XXXX-XXXX-****" in credit card
display censored

// Pattern splitting
store csv line as "Smith,John,42,Engineer"
store values as split csv line by pattern ","
display "Name: " with values[1] with " " with values[0]
display "Age: " with values[2]
display "Job: " with values[3]

// Testing with optional parts
store time as "9:30 AM"
store time pattern as pattern "{hour}:{minute} {optional AM or PM}"

check if time matches pattern time pattern:
    display "Valid time format!"
otherwise:
    display "Invalid time format!"
end check

// Testing with alternation
store color as "blue"
store color pattern as pattern "red or green or blue"

check if color matches pattern color pattern:
    display "Primary color!"
otherwise:
    display "Not a primary color!"
end check

// Testing with quantifiers
store zip code as "12345-6789"
store zip pattern as pattern "{5 digits}{optional - followed by 4 digits}"

check if zip code matches pattern zip pattern:
    display "Valid ZIP code format!"
otherwise:
    display "Invalid ZIP code format!"
end check

display "Pattern matching tests completed!"
