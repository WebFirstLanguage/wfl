AST output for: TestPrograms/containers_comprehensive.wfl
==============================================

Program with 53 statements:

Statement #1: DisplayStatement {
    value: Literal(
        String(
            "=== WFL Container System Comprehensive Test ===",
        ),
        4,
        9,
    ),
    line: 5,
    column: 1,
}

Statement #2: DisplayStatement {
    value: Literal(
        String(
            "",
        ),
        5,
        9,
    ),
    line: 8,
    column: 1,
}

Statement #3: DisplayStatement {
    value: Literal(
        String(
            "1. Basic Container Test",
        ),
        8,
        9,
    ),
    line: 9,
    column: 1,
}

Statement #4: ContainerDefinition {
    name: "Person",
    extends: None,
    implements: [],
    properties: [
        PropertyDefinition {
            name: "name",
            property_type: Some(
                Text,
            ),
            default_value: None,
            validation_rules: [],
            visibility: Public,
            is_static: false,
            line: 10,
            column: 5,
        },
        PropertyDefinition {
            name: "age",
            property_type: Some(
                Number,
            ),
            default_value: None,
            validation_rules: [],
            visibility: Public,
            is_static: false,
            line: 11,
            column: 5,
        },
        PropertyDefinition {
            name: "email",
            property_type: Some(
                Text,
            ),
            default_value: None,
            validation_rules: [],
            visibility: Public,
            is_static: false,
            line: 12,
            column: 5,
        },
    ],
    methods: [
        ActionDefinition {
            name: "greet",
            parameters: [],
            body: [
                DisplayStatement {
                    value: Concatenation {
                        left: Literal(
                            String(
                                "Hello, I am ",
                            ),
                            15,
                            17,
                        ),
                        right: Concatenation {
                            left: Variable(
                                "name",
                                15,
                                37,
                            ),
                            right: Concatenation {
                                left: Literal(
                                    String(
                                        " and I am ",
                                    ),
                                    15,
                                    47,
                                ),
                                right: Concatenation {
                                    left: Variable(
                                        "age",
                                        15,
                                        65,
                                    ),
                                    right: Literal(
                                        String(
                                            " years old.",
                                        ),
                                        15,
                                        74,
                                    ),
                                    line: 15,
                                    column: 69,
                                },
                                line: 15,
                                column: 60,
                            },
                            line: 15,
                            column: 42,
                        },
                        line: 15,
                        column: 32,
                    },
                    line: 16,
                    column: 5,
                },
            ],
            return_type: None,
            line: 0,
            column: 0,
        },
        ActionDefinition {
            name: "set_email",
            parameters: [
                Parameter {
                    name: "new_email",
                    param_type: Some(
                        Text,
                    ),
                    default_value: None,
                    line: 18,
                    column: 28,
                },
            ],
            body: [
                VariableDeclaration {
                    name: "email",
                    value: Variable(
                        "new_email",
                        19,
                        24,
                    ),
                    is_constant: false,
                    line: 19,
                    column: 9,
                },
                DisplayStatement {
                    value: Concatenation {
                        left: Literal(
                            String(
                                "Email set to: ",
                            ),
                            20,
                            17,
                        ),
                        right: Variable(
                            "email",
                            20,
                            39,
                        ),
                        line: 20,
                        column: 34,
                    },
                    line: 21,
                    column: 5,
                },
            ],
            return_type: None,
            line: 0,
            column: 0,
        },
        ActionDefinition {
            name: "get_info",
            parameters: [],
            body: [
                ReturnStatement {
                    value: Some(
                        Concatenation {
                            left: Variable(
                                "name",
                                24,
                                16,
                            ),
                            right: Concatenation {
                                left: Literal(
                                    String(
                                        " (",
                                    ),
                                    24,
                                    26,
                                ),
                                right: Concatenation {
                                    left: Variable(
                                        "age",
                                        24,
                                        36,
                                    ),
                                    right: Literal(
                                        String(
                                            " years old)",
                                        ),
                                        24,
                                        45,
                                    ),
                                    line: 24,
                                    column: 40,
                                },
                                line: 24,
                                column: 31,
                            },
                            line: 24,
                            column: 21,
                        },
                    ),
                    line: 24,
                    column: 9,
                },
            ],
            return_type: Some(
                Text,
            ),
            line: 0,
            column: 0,
        },
    ],
    events: [],
    static_properties: [],
    static_methods: [],
    line: 9,
    column: 1,
}

Statement #5: ContainerInstantiation {
    container_type: "Person",
    instance_name: "alice",
    arguments: [],
    property_initializers: [
        PropertyInitializer {
            name: "name",
            value: Literal(
                String(
                    "Alice",
                ),
                29,
                13,
            ),
            line: 29,
            column: 5,
        },
        PropertyInitializer {
            name: "age",
            value: Literal(
                Integer(
                    28,
                ),
                30,
                12,
            ),
            line: 30,
            column: 5,
        },
        PropertyInitializer {
            name: "email",
            value: Literal(
                String(
                    "alice@example.com",
                ),
                31,
                14,
            ),
            line: 31,
            column: 5,
        },
    ],
    line: 28,
    column: 1,
}

Statement #6: ExpressionStatement {
    expression: MethodCall {
        object: Variable(
            "alice",
            34,
            1,
        ),
        method: "greet",
        arguments: [],
        line: 34,
        column: 1,
    },
    line: 35,
    column: 1,
}

Statement #7: ExpressionStatement {
    expression: MethodCall {
        object: Variable(
            "alice",
            35,
            1,
        ),
        method: "set_email",
        arguments: [
            Argument {
                name: None,
                value: Literal(
                    String(
                        "alice.smith@example.com",
                    ),
                    35,
                    17,
                ),
            },
        ],
        line: 35,
        column: 1,
    },
    line: 36,
    column: 1,
}

Statement #8: VariableDeclaration {
    name: "info",
    value: MethodCall {
        object: Variable(
            "alice",
            36,
            15,
        ),
        method: "get_info",
        arguments: [],
        line: 36,
        column: 15,
    },
    is_constant: false,
    line: 36,
    column: 1,
}

Statement #9: DisplayStatement {
    value: Concatenation {
        left: Literal(
            String(
                "Person info: ",
            ),
            37,
            9,
        ),
        right: Variable(
            "info",
            37,
            30,
        ),
        line: 37,
        column: 25,
    },
    line: 38,
    column: 1,
}

Statement #10: DisplayStatement {
    value: Literal(
        String(
            "",
        ),
        38,
        9,
    ),
    line: 41,
    column: 1,
}

Statement #11: DisplayStatement {
    value: Literal(
        String(
            "2. Container Inheritance Test",
        ),
        41,
        9,
    ),
    line: 42,
    column: 1,
}

Statement #12: ContainerDefinition {
    name: "Employee",
    extends: Some(
        "Person",
    ),
    implements: [],
    properties: [
        PropertyDefinition {
            name: "job_title",
            property_type: Some(
                Text,
            ),
            default_value: None,
            validation_rules: [],
            visibility: Public,
            is_static: false,
            line: 43,
            column: 5,
        },
        PropertyDefinition {
            name: "salary",
            property_type: Some(
                Number,
            ),
            default_value: None,
            validation_rules: [],
            visibility: Public,
            is_static: false,
            line: 44,
            column: 5,
        },
    ],
    methods: [
        ActionDefinition {
            name: "greet",
            parameters: [],
            body: [
                DisplayStatement {
                    value: Concatenation {
                        left: Literal(
                            String(
                                "Hello, I am ",
                            ),
                            47,
                            17,
                        ),
                        right: Concatenation {
                            left: Variable(
                                "name",
                                47,
                                37,
                            ),
                            right: Concatenation {
                                left: Literal(
                                    String(
                                        ", ",
                                    ),
                                    47,
                                    47,
                                ),
                                right: Concatenation {
                                    left: Variable(
                                        "job_title",
                                        47,
                                        57,
                                    ),
                                    right: Literal(
                                        String(
                                            " at your service.",
                                        ),
                                        47,
                                        72,
                                    ),
                                    line: 47,
                                    column: 67,
                                },
                                line: 47,
                                column: 52,
                            },
                            line: 47,
                            column: 42,
                        },
                        line: 47,
                        column: 32,
                    },
                    line: 48,
                    column: 5,
                },
            ],
            return_type: None,
            line: 0,
            column: 0,
        },
        ActionDefinition {
            name: "get_salary_info",
            parameters: [],
            body: [
                ReturnStatement {
                    value: Some(
                        Concatenation {
                            left: Variable(
                                "job_title",
                                51,
                                16,
                            ),
                            right: Concatenation {
                                left: Literal(
                                    String(
                                        " earns $",
                                    ),
                                    51,
                                    31,
                                ),
                                right: Variable(
                                    "salary",
                                    51,
                                    47,
                                ),
                                line: 51,
                                column: 42,
                            },
                            line: 51,
                            column: 26,
                        },
                    ),
                    line: 51,
                    column: 9,
                },
            ],
            return_type: Some(
                Text,
            ),
            line: 0,
            column: 0,
        },
        ActionDefinition {
            name: "give_raise",
            parameters: [
                Parameter {
                    name: "amount",
                    param_type: Some(
                        Number,
                    ),
                    default_value: None,
                    line: 54,
                    column: 29,
                },
            ],
            body: [
                VariableDeclaration {
                    name: "salary",
                    value: BinaryOperation {
                        left: Variable(
                            "salary",
                            55,
                            25,
                        ),
                        operator: Plus,
                        right: Variable(
                            "amount",
                            55,
                            34,
                        ),
                        line: 55,
                        column: 32,
                    },
                    is_constant: false,
                    line: 55,
                    column: 9,
                },
                DisplayStatement {
                    value: Concatenation {
                        left: Variable(
                            "name",
                            56,
                            17,
                        ),
                        right: Concatenation {
                            left: Literal(
                                String(
                                    " received a raise of $",
                                ),
                                56,
                                27,
                            ),
                            right: Variable(
                                "amount",
                                56,
                                57,
                            ),
                            line: 56,
                            column: 52,
                        },
                        line: 56,
                        column: 22,
                    },
                    line: 57,
                    column: 5,
                },
            ],
            return_type: None,
            line: 0,
            column: 0,
        },
    ],
    events: [],
    static_properties: [],
    static_methods: [],
    line: 42,
    column: 1,
}

Statement #13: ContainerInstantiation {
    container_type: "Employee",
    instance_name: "bob",
    arguments: [],
    property_initializers: [
        PropertyInitializer {
            name: "name",
            value: Literal(
                String(
                    "Bob",
                ),
                61,
                13,
            ),
            line: 61,
            column: 5,
        },
        PropertyInitializer {
            name: "age",
            value: Literal(
                Integer(
                    35,
                ),
                62,
                12,
            ),
            line: 62,
            column: 5,
        },
        PropertyInitializer {
            name: "job_title",
            value: Literal(
                String(
                    "Developer",
                ),
                63,
                18,
            ),
            line: 63,
            column: 5,
        },
        PropertyInitializer {
            name: "salary",
            value: Literal(
                Integer(
                    75000,
                ),
                64,
                15,
            ),
            line: 64,
            column: 5,
        },
    ],
    line: 60,
    column: 1,
}

Statement #14: ExpressionStatement {
    expression: MethodCall {
        object: Variable(
            "bob",
            67,
            1,
        ),
        method: "greet",
        arguments: [],
        line: 67,
        column: 1,
    },
    line: 68,
    column: 1,
}

Statement #15: VariableDeclaration {
    name: "salary_info",
    value: MethodCall {
        object: Variable(
            "bob",
            68,
            22,
        ),
        method: "get_salary_info",
        arguments: [],
        line: 68,
        column: 22,
    },
    is_constant: false,
    line: 68,
    column: 1,
}

Statement #16: DisplayStatement {
    value: Variable(
        "salary_info",
        69,
        9,
    ),
    line: 70,
    column: 1,
}

Statement #17: ExpressionStatement {
    expression: MethodCall {
        object: Variable(
            "bob",
            70,
            1,
        ),
        method: "give_raise",
        arguments: [
            Argument {
                name: None,
                value: Literal(
                    Integer(
                        5000,
                    ),
                    70,
                    16,
                ),
            },
        ],
        line: 70,
        column: 1,
    },
    line: 71,
    column: 1,
}

Statement #18: DisplayStatement {
    value: Literal(
        String(
            "",
        ),
        71,
        9,
    ),
    line: 74,
    column: 1,
}

Statement #19: DisplayStatement {
    value: Literal(
        String(
            "3. Interface Implementation Test",
        ),
        74,
        9,
    ),
    line: 75,
    column: 1,
}

Statement #20: InterfaceDefinition {
    name: "Drawable",
    extends: [],
    required_actions: [],
    line: 75,
    column: 1,
}

Statement #21: ContainerDefinition {
    name: "Rectangle",
    extends: None,
    implements: [
        "Drawable",
    ],
    properties: [
        PropertyDefinition {
            name: "width",
            property_type: Some(
                Number,
            ),
            default_value: None,
            validation_rules: [],
            visibility: Public,
            is_static: false,
            line: 78,
            column: 5,
        },
        PropertyDefinition {
            name: "height",
            property_type: Some(
                Number,
            ),
            default_value: None,
            validation_rules: [],
            visibility: Public,
            is_static: false,
            line: 79,
            column: 5,
        },
    ],
    methods: [
        ActionDefinition {
            name: "draw",
            parameters: [],
            body: [
                DisplayStatement {
                    value: Concatenation {
                        left: Literal(
                            String(
                                "Drawing rectangle: ",
                            ),
                            82,
                            17,
                        ),
                        right: Concatenation {
                            left: Variable(
                                "width",
                                82,
                                44,
                            ),
                            right: Concatenation {
                                left: Literal(
                                    String(
                                        " x ",
                                    ),
                                    82,
                                    55,
                                ),
                                right: Variable(
                                    "height",
                                    82,
                                    66,
                                ),
                                line: 82,
                                column: 61,
                            },
                            line: 82,
                            column: 50,
                        },
                        line: 82,
                        column: 39,
                    },
                    line: 83,
                    column: 5,
                },
            ],
            return_type: None,
            line: 0,
            column: 0,
        },
        ActionDefinition {
            name: "get_area",
            parameters: [],
            body: [
                ReturnStatement {
                    value: Some(
                        BinaryOperation {
                            left: Variable(
                                "width",
                                86,
                                16,
                            ),
                            operator: Multiply,
                            right: Variable(
                                "height",
                                86,
                                28,
                            ),
                            line: 86,
                            column: 22,
                        },
                    ),
                    line: 86,
                    column: 9,
                },
            ],
            return_type: Some(
                Number,
            ),
            line: 0,
            column: 0,
        },
        ActionDefinition {
            name: "set_dimensions",
            parameters: [
                Parameter {
                    name: "w",
                    param_type: Some(
                        Number,
                    ),
                    default_value: None,
                    line: 89,
                    column: 33,
                },
                Parameter {
                    name: "h",
                    param_type: Some(
                        Number,
                    ),
                    default_value: None,
                    line: 89,
                    column: 44,
                },
            ],
            body: [
                VariableDeclaration {
                    name: "width",
                    value: Variable(
                        "w",
                        90,
                        24,
                    ),
                    is_constant: false,
                    line: 90,
                    column: 9,
                },
                VariableDeclaration {
                    name: "height",
                    value: Variable(
                        "h",
                        91,
                        25,
                    ),
                    is_constant: false,
                    line: 91,
                    column: 9,
                },
            ],
            return_type: None,
            line: 0,
            column: 0,
        },
    ],
    events: [],
    static_properties: [],
    static_methods: [],
    line: 77,
    column: 1,
}

Statement #22: ContainerInstantiation {
    container_type: "Rectangle",
    instance_name: "rect",
    arguments: [],
    property_initializers: [
        PropertyInitializer {
            name: "width",
            value: Literal(
                Integer(
                    10,
                ),
                96,
                14,
            ),
            line: 96,
            column: 5,
        },
        PropertyInitializer {
            name: "height",
            value: Literal(
                Integer(
                    5,
                ),
                97,
                15,
            ),
            line: 97,
            column: 5,
        },
    ],
    line: 95,
    column: 1,
}

Statement #23: ExpressionStatement {
    expression: MethodCall {
        object: Variable(
            "rect",
            100,
            1,
        ),
        method: "draw",
        arguments: [],
        line: 100,
        column: 1,
    },
    line: 101,
    column: 1,
}

Statement #24: VariableDeclaration {
    name: "area",
    value: MethodCall {
        object: Variable(
            "rect",
            101,
            15,
        ),
        method: "get_area",
        arguments: [],
        line: 101,
        column: 15,
    },
    is_constant: false,
    line: 101,
    column: 1,
}

Statement #25: DisplayStatement {
    value: Concatenation {
        left: Literal(
            String(
                "Rectangle area: ",
            ),
            102,
            9,
        ),
        right: Variable(
            "area",
            102,
            33,
        ),
        line: 102,
        column: 28,
    },
    line: 103,
    column: 1,
}

Statement #26: ExpressionStatement {
    expression: MethodCall {
        object: Variable(
            "rect",
            103,
            1,
        ),
        method: "set_dimensions",
        arguments: [
            Argument {
                name: None,
                value: Literal(
                    Integer(
                        15,
                    ),
                    103,
                    21,
                ),
            },
            Argument {
                name: None,
                value: Literal(
                    Integer(
                        8,
                    ),
                    103,
                    25,
                ),
            },
        ],
        line: 103,
        column: 1,
    },
    line: 104,
    column: 1,
}

Statement #27: ExpressionStatement {
    expression: MethodCall {
        object: Variable(
            "rect",
            104,
            1,
        ),
        method: "draw",
        arguments: [],
        line: 104,
        column: 1,
    },
    line: 105,
    column: 1,
}

Statement #28: DisplayStatement {
    value: Concatenation {
        left: Literal(
            String(
                "New area: ",
            ),
            105,
            9,
        ),
        right: MethodCall {
            object: Variable(
                "rect",
                105,
                27,
            ),
            method: "get_area",
            arguments: [],
            line: 105,
            column: 27,
        },
        line: 105,
        column: 22,
    },
    line: 106,
    column: 1,
}

Statement #29: DisplayStatement {
    value: Literal(
        String(
            "",
        ),
        106,
        9,
    ),
    line: 109,
    column: 1,
}

Statement #30: DisplayStatement {
    value: Literal(
        String(
            "4. Container Events Test",
        ),
        109,
        9,
    ),
    line: 110,
    column: 1,
}

Statement #31: ContainerDefinition {
    name: "Button",
    extends: None,
    implements: [],
    properties: [
        PropertyDefinition {
            name: "label",
            property_type: Some(
                Text,
            ),
            default_value: None,
            validation_rules: [],
            visibility: Public,
            is_static: false,
            line: 111,
            column: 5,
        },
        PropertyDefinition {
            name: "clicked",
            property_type: Some(
                Number,
            ),
            default_value: None,
            validation_rules: [],
            visibility: Public,
            is_static: false,
            line: 112,
            column: 5,
        },
    ],
    methods: [
        ActionDefinition {
            name: "click",
            parameters: [],
            body: [
                VariableDeclaration {
                    name: "clicked",
                    value: BinaryOperation {
                        left: Variable(
                            "clicked",
                            118,
                            26,
                        ),
                        operator: Plus,
                        right: Literal(
                            Integer(
                                1,
                            ),
                            118,
                            36,
                        ),
                        line: 118,
                        column: 34,
                    },
                    is_constant: false,
                    line: 118,
                    column: 9,
                },
                DisplayStatement {
                    value: Concatenation {
                        left: Literal(
                            String(
                                "Button '",
                            ),
                            119,
                            17,
                        ),
                        right: Concatenation {
                            left: Variable(
                                "label",
                                119,
                                33,
                            ),
                            right: Concatenation {
                                left: Literal(
                                    String(
                                        "' clicked ",
                                    ),
                                    119,
                                    44,
                                ),
                                right: Concatenation {
                                    left: Variable(
                                        "clicked",
                                        119,
                                        62,
                                    ),
                                    right: Literal(
                                        String(
                                            " times",
                                        ),
                                        119,
                                        75,
                                    ),
                                    line: 119,
                                    column: 70,
                                },
                                line: 119,
                                column: 57,
                            },
                            line: 119,
                            column: 39,
                        },
                        line: 119,
                        column: 28,
                    },
                    line: 120,
                    column: 9,
                },
                EventTrigger {
                    name: "on_click",
                    arguments: [],
                    line: 120,
                    column: 9,
                },
            ],
            return_type: None,
            line: 0,
            column: 0,
        },
        ActionDefinition {
            name: "hover",
            parameters: [],
            body: [
                DisplayStatement {
                    value: Concatenation {
                        left: Literal(
                            String(
                                "Hovering over '",
                            ),
                            124,
                            17,
                        ),
                        right: Concatenation {
                            left: Variable(
                                "label",
                                124,
                                40,
                            ),
                            right: Literal(
                                String(
                                    "'",
                                ),
                                124,
                                51,
                            ),
                            line: 124,
                            column: 46,
                        },
                        line: 124,
                        column: 35,
                    },
                    line: 125,
                    column: 9,
                },
                EventTrigger {
                    name: "on_hover",
                    arguments: [],
                    line: 125,
                    column: 9,
                },
            ],
            return_type: None,
            line: 0,
            column: 0,
        },
    ],
    events: [
        EventDefinition {
            name: "on_click",
            parameters: [],
            line: 114,
            column: 5,
        },
        EventDefinition {
            name: "on_hover",
            parameters: [],
            line: 115,
            column: 5,
        },
    ],
    static_properties: [],
    static_methods: [],
    line: 110,
    column: 1,
}

Statement #32: ContainerInstantiation {
    container_type: "Button",
    instance_name: "my_button",
    arguments: [],
    property_initializers: [
        PropertyInitializer {
            name: "label",
            value: Literal(
                String(
                    "Submit",
                ),
                130,
                14,
            ),
            line: 130,
            column: 5,
        },
        PropertyInitializer {
            name: "clicked",
            value: Literal(
                Integer(
                    0,
                ),
                131,
                16,
            ),
            line: 131,
            column: 5,
        },
    ],
    line: 129,
    column: 1,
}

Statement #33: ExpressionStatement {
    expression: MethodCall {
        object: Variable(
            "my_button",
            134,
            1,
        ),
        method: "click",
        arguments: [],
        line: 134,
        column: 1,
    },
    line: 135,
    column: 1,
}

Statement #34: ExpressionStatement {
    expression: MethodCall {
        object: Variable(
            "my_button",
            135,
            1,
        ),
        method: "hover",
        arguments: [],
        line: 135,
        column: 1,
    },
    line: 136,
    column: 1,
}

Statement #35: ExpressionStatement {
    expression: MethodCall {
        object: Variable(
            "my_button",
            136,
            1,
        ),
        method: "click",
        arguments: [],
        line: 136,
        column: 1,
    },
    line: 137,
    column: 1,
}

Statement #36: DisplayStatement {
    value: Literal(
        String(
            "",
        ),
        137,
        9,
    ),
    line: 140,
    column: 1,
}

Statement #37: DisplayStatement {
    value: Literal(
        String(
            "5. Container Type Checking Test",
        ),
        140,
        9,
    ),
    line: 141,
    column: 1,
}

Statement #38: ContainerDefinition {
    name: "TypedContainer",
    extends: None,
    implements: [],
    properties: [
        PropertyDefinition {
            name: "text_prop",
            property_type: Some(
                Text,
            ),
            default_value: None,
            validation_rules: [],
            visibility: Public,
            is_static: false,
            line: 142,
            column: 5,
        },
        PropertyDefinition {
            name: "num_prop",
            property_type: Some(
                Number,
            ),
            default_value: None,
            validation_rules: [],
            visibility: Public,
            is_static: false,
            line: 143,
            column: 5,
        },
        PropertyDefinition {
            name: "bool_prop",
            property_type: Some(
                Boolean,
            ),
            default_value: None,
            validation_rules: [],
            visibility: Public,
            is_static: false,
            line: 144,
            column: 5,
        },
    ],
    methods: [
        ActionDefinition {
            name: "set_props",
            parameters: [
                Parameter {
                    name: "t",
                    param_type: Some(
                        Text,
                    ),
                    default_value: None,
                    line: 146,
                    column: 28,
                },
                Parameter {
                    name: "n",
                    param_type: Some(
                        Number,
                    ),
                    default_value: None,
                    line: 146,
                    column: 37,
                },
                Parameter {
                    name: "b",
                    param_type: Some(
                        Boolean,
                    ),
                    default_value: None,
                    line: 146,
                    column: 48,
                },
            ],
            body: [
                VariableDeclaration {
                    name: "text_prop",
                    value: Variable(
                        "t",
                        147,
                        28,
                    ),
                    is_constant: false,
                    line: 147,
                    column: 9,
                },
                VariableDeclaration {
                    name: "num_prop",
                    value: Variable(
                        "n",
                        148,
                        27,
                    ),
                    is_constant: false,
                    line: 148,
                    column: 9,
                },
                VariableDeclaration {
                    name: "bool_prop",
                    value: Variable(
                        "b",
                        149,
                        28,
                    ),
                    is_constant: false,
                    line: 149,
                    column: 9,
                },
            ],
            return_type: None,
            line: 0,
            column: 0,
        },
        ActionDefinition {
            name: "display_props",
            parameters: [],
            body: [
                DisplayStatement {
                    value: Concatenation {
                        left: Literal(
                            String(
                                "Text: ",
                            ),
                            153,
                            17,
                        ),
                        right: Concatenation {
                            left: Variable(
                                "text_prop",
                                153,
                                31,
                            ),
                            right: Concatenation {
                                left: Literal(
                                    String(
                                        " (type: ",
                                    ),
                                    153,
                                    46,
                                ),
                                right: Concatenation {
                                    left: FunctionCall {
                                        function: Variable(
                                            "typeof",
                                            153,
                                            62,
                                        ),
                                        arguments: [
                                            Argument {
                                                name: None,
                                                value: Variable(
                                                    "text_prop",
                                                    153,
                                                    72,
                                                ),
                                            },
                                        ],
                                        line: 153,
                                        column: 69,
                                    },
                                    right: Literal(
                                        String(
                                            ")",
                                        ),
                                        153,
                                        87,
                                    ),
                                    line: 153,
                                    column: 82,
                                },
                                line: 153,
                                column: 57,
                            },
                            line: 153,
                            column: 41,
                        },
                        line: 153,
                        column: 26,
                    },
                    line: 154,
                    column: 9,
                },
                DisplayStatement {
                    value: Concatenation {
                        left: Literal(
                            String(
                                "Number: ",
                            ),
                            154,
                            17,
                        ),
                        right: Concatenation {
                            left: Variable(
                                "num_prop",
                                154,
                                33,
                            ),
                            right: Concatenation {
                                left: Literal(
                                    String(
                                        " (type: ",
                                    ),
                                    154,
                                    47,
                                ),
                                right: Concatenation {
                                    left: FunctionCall {
                                        function: Variable(
                                            "typeof",
                                            154,
                                            63,
                                        ),
                                        arguments: [
                                            Argument {
                                                name: None,
                                                value: Variable(
                                                    "num_prop",
                                                    154,
                                                    73,
                                                ),
                                            },
                                        ],
                                        line: 154,
                                        column: 70,
                                    },
                                    right: Literal(
                                        String(
                                            ")",
                                        ),
                                        154,
                                        87,
                                    ),
                                    line: 154,
                                    column: 82,
                                },
                                line: 154,
                                column: 58,
                            },
                            line: 154,
                            column: 42,
                        },
                        line: 154,
                        column: 28,
                    },
                    line: 155,
                    column: 9,
                },
                DisplayStatement {
                    value: Concatenation {
                        left: Literal(
                            String(
                                "Boolean: ",
                            ),
                            155,
                            17,
                        ),
                        right: Concatenation {
                            left: Variable(
                                "bool_prop",
                                155,
                                34,
                            ),
                            right: Concatenation {
                                left: Literal(
                                    String(
                                        " (type: ",
                                    ),
                                    155,
                                    49,
                                ),
                                right: Concatenation {
                                    left: FunctionCall {
                                        function: Variable(
                                            "typeof",
                                            155,
                                            65,
                                        ),
                                        arguments: [
                                            Argument {
                                                name: None,
                                                value: Variable(
                                                    "bool_prop",
                                                    155,
                                                    75,
                                                ),
                                            },
                                        ],
                                        line: 155,
                                        column: 72,
                                    },
                                    right: Literal(
                                        String(
                                            ")",
                                        ),
                                        155,
                                        90,
                                    ),
                                    line: 155,
                                    column: 85,
                                },
                                line: 155,
                                column: 60,
                            },
                            line: 155,
                            column: 44,
                        },
                        line: 155,
                        column: 29,
                    },
                    line: 156,
                    column: 5,
                },
            ],
            return_type: None,
            line: 0,
            column: 0,
        },
    ],
    events: [],
    static_properties: [],
    static_methods: [],
    line: 141,
    column: 1,
}

Statement #39: ContainerInstantiation {
    container_type: "TypedContainer",
    instance_name: "typed_obj",
    arguments: [],
    property_initializers: [
        PropertyInitializer {
            name: "text_prop",
            value: Literal(
                String(
                    "Hello",
                ),
                160,
                18,
            ),
            line: 160,
            column: 5,
        },
        PropertyInitializer {
            name: "num_prop",
            value: Literal(
                Integer(
                    42,
                ),
                161,
                17,
            ),
            line: 161,
            column: 5,
        },
        PropertyInitializer {
            name: "bool_prop",
            value: Literal(
                Boolean(
                    true,
                ),
                162,
                18,
            ),
            line: 162,
            column: 5,
        },
    ],
    line: 159,
    column: 1,
}

Statement #40: ExpressionStatement {
    expression: MethodCall {
        object: Variable(
            "typed_obj",
            165,
            1,
        ),
        method: "display_props",
        arguments: [],
        line: 165,
        column: 1,
    },
    line: 166,
    column: 1,
}

Statement #41: ExpressionStatement {
    expression: MethodCall {
        object: Variable(
            "typed_obj",
            166,
            1,
        ),
        method: "set_props",
        arguments: [
            Argument {
                name: None,
                value: Literal(
                    String(
                        "World",
                    ),
                    166,
                    21,
                ),
            },
            Argument {
                name: None,
                value: Literal(
                    Integer(
                        84,
                    ),
                    166,
                    30,
                ),
            },
            Argument {
                name: None,
                value: Literal(
                    Boolean(
                        false,
                    ),
                    166,
                    34,
                ),
            },
        ],
        line: 166,
        column: 1,
    },
    line: 167,
    column: 1,
}

Statement #42: ExpressionStatement {
    expression: MethodCall {
        object: Variable(
            "typed_obj",
            167,
            1,
        ),
        method: "display_props",
        arguments: [],
        line: 167,
        column: 1,
    },
    line: 168,
    column: 1,
}

Statement #43: DisplayStatement {
    value: Literal(
        String(
            "",
        ),
        168,
        9,
    ),
    line: 171,
    column: 1,
}

Statement #44: DisplayStatement {
    value: Literal(
        String(
            "6. Multi-level Inheritance Test",
        ),
        171,
        9,
    ),
    line: 172,
    column: 1,
}

Statement #45: ContainerDefinition {
    name: "Animal",
    extends: None,
    implements: [],
    properties: [
        PropertyDefinition {
            name: "species",
            property_type: Some(
                Text,
            ),
            default_value: None,
            validation_rules: [],
            visibility: Public,
            is_static: false,
            line: 173,
            column: 5,
        },
    ],
    methods: [
        ActionDefinition {
            name: "make_sound",
            parameters: [],
            body: [
                DisplayStatement {
                    value: Concatenation {
                        left: Literal(
                            String(
                                "The ",
                            ),
                            176,
                            17,
                        ),
                        right: Concatenation {
                            left: Variable(
                                "species",
                                176,
                                29,
                            ),
                            right: Literal(
                                String(
                                    " makes a sound",
                                ),
                                176,
                                42,
                            ),
                            line: 176,
                            column: 37,
                        },
                        line: 176,
                        column: 24,
                    },
                    line: 177,
                    column: 5,
                },
            ],
            return_type: None,
            line: 0,
            column: 0,
        },
    ],
    events: [],
    static_properties: [],
    static_methods: [],
    line: 172,
    column: 1,
}

Statement #46: ContainerDefinition {
    name: "Mammal",
    extends: Some(
        "Animal",
    ),
    implements: [],
    properties: [
        PropertyDefinition {
            name: "fur_color",
            property_type: Some(
                Text,
            ),
            default_value: None,
            validation_rules: [],
            visibility: Public,
            is_static: false,
            line: 181,
            column: 5,
        },
    ],
    methods: [
        ActionDefinition {
            name: "shed_fur",
            parameters: [],
            body: [
                DisplayStatement {
                    value: Concatenation {
                        left: Literal(
                            String(
                                "The ",
                            ),
                            184,
                            17,
                        ),
                        right: Concatenation {
                            left: Variable(
                                "species",
                                184,
                                29,
                            ),
                            right: Concatenation {
                                left: Literal(
                                    String(
                                        " sheds ",
                                    ),
                                    184,
                                    42,
                                ),
                                right: Concatenation {
                                    left: Variable(
                                        "fur_color",
                                        184,
                                        57,
                                    ),
                                    right: Literal(
                                        String(
                                            " fur",
                                        ),
                                        184,
                                        72,
                                    ),
                                    line: 184,
                                    column: 67,
                                },
                                line: 184,
                                column: 52,
                            },
                            line: 184,
                            column: 37,
                        },
                        line: 184,
                        column: 24,
                    },
                    line: 185,
                    column: 5,
                },
            ],
            return_type: None,
            line: 0,
            column: 0,
        },
    ],
    events: [],
    static_properties: [],
    static_methods: [],
    line: 180,
    column: 1,
}

Statement #47: ContainerDefinition {
    name: "Dog",
    extends: Some(
        "Mammal",
    ),
    implements: [],
    properties: [
        PropertyDefinition {
            name: "breed",
            property_type: Some(
                Text,
            ),
            default_value: None,
            validation_rules: [],
            visibility: Public,
            is_static: false,
            line: 189,
            column: 5,
        },
    ],
    methods: [
        ActionDefinition {
            name: "make_sound",
            parameters: [],
            body: [
                DisplayStatement {
                    value: Concatenation {
                        left: Literal(
                            String(
                                "The ",
                            ),
                            192,
                            17,
                        ),
                        right: Concatenation {
                            left: Variable(
                                "breed",
                                192,
                                29,
                            ),
                            right: Literal(
                                String(
                                    " dog barks!",
                                ),
                                192,
                                40,
                            ),
                            line: 192,
                            column: 35,
                        },
                        line: 192,
                        column: 24,
                    },
                    line: 193,
                    column: 5,
                },
            ],
            return_type: None,
            line: 0,
            column: 0,
        },
        ActionDefinition {
            name: "fetch",
            parameters: [],
            body: [
                DisplayStatement {
                    value: Concatenation {
                        left: Literal(
                            String(
                                "The ",
                            ),
                            196,
                            17,
                        ),
                        right: Concatenation {
                            left: Variable(
                                "breed",
                                196,
                                29,
                            ),
                            right: Literal(
                                String(
                                    " fetches the ball",
                                ),
                                196,
                                40,
                            ),
                            line: 196,
                            column: 35,
                        },
                        line: 196,
                        column: 24,
                    },
                    line: 197,
                    column: 5,
                },
            ],
            return_type: None,
            line: 0,
            column: 0,
        },
    ],
    events: [],
    static_properties: [],
    static_methods: [],
    line: 188,
    column: 1,
}

Statement #48: ContainerInstantiation {
    container_type: "Dog",
    instance_name: "buddy",
    arguments: [],
    property_initializers: [
        PropertyInitializer {
            name: "species",
            value: Literal(
                String(
                    "Canis lupus",
                ),
                201,
                16,
            ),
            line: 201,
            column: 5,
        },
        PropertyInitializer {
            name: "fur_color",
            value: Literal(
                String(
                    "golden",
                ),
                202,
                18,
            ),
            line: 202,
            column: 5,
        },
        PropertyInitializer {
            name: "breed",
            value: Literal(
                String(
                    "Golden Retriever",
                ),
                203,
                14,
            ),
            line: 203,
            column: 5,
        },
    ],
    line: 200,
    column: 1,
}

Statement #49: ExpressionStatement {
    expression: MethodCall {
        object: Variable(
            "buddy",
            206,
            1,
        ),
        method: "make_sound",
        arguments: [],
        line: 206,
        column: 1,
    },
    line: 207,
    column: 1,
}

Statement #50: ExpressionStatement {
    expression: MethodCall {
        object: Variable(
            "buddy",
            207,
            1,
        ),
        method: "shed_fur",
        arguments: [],
        line: 207,
        column: 1,
    },
    line: 208,
    column: 1,
}

Statement #51: ExpressionStatement {
    expression: MethodCall {
        object: Variable(
            "buddy",
            208,
            1,
        ),
        method: "fetch",
        arguments: [],
        line: 208,
        column: 1,
    },
    line: 209,
    column: 1,
}

Statement #52: DisplayStatement {
    value: Literal(
        String(
            "",
        ),
        209,
        9,
    ),
    line: 211,
    column: 1,
}

Statement #53: DisplayStatement {
    value: Literal(
        String(
            "=== Container System Tests Completed ===",
        ),
        211,
        9,
    ),
    line: 211,
    column: 9,
}

