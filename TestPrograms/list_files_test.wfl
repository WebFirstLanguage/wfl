// Test file for advanced directory listing functionality

display "=== Testing Advanced File Listing Features ==="
display ""

// Test 1: Basic list files (existing functionality)
display "Test 1: Basic list files in current directory"
store currentFiles as list files in "."
display "Files in current directory:"
for each item in currentFiles:
    display "  " with item
end for
display ""

// Test 2: List files with single extension filter
display "Test 2: List .wfl files in TestPrograms"
store wflFiles as list files in "./TestPrograms" with extension ".wfl"
display "WFL files in TestPrograms:"
for each item in wflFiles:
    display "  " with item
end for
display ""

// Test 3: List all files recursively
display "Test 3: List all files recursively in src"
store allSrcFiles as list files in "./src" recursively
display "Total files in src (recursive): " with length of allSrcFiles
display "First 5 files:"
store counter as 0
for each item in allSrcFiles:
    if counter is less than 5 then:
        display "  " with item
        change counter to counter plus 1
    end if
end for
display ""

// Test 4: List files recursively with extension filter
display "Test 4: List .rs files recursively in src"
store rustFiles as list files in "./src" recursively with extension ".rs"
display "Rust files in src (recursive): " with length of rustFiles
display "First 5 Rust files:"
store counter as 0
for each item in rustFiles:
    if counter is less than 5 then:
        display "  " with item
        change counter to counter plus 1
    end if
end for
display ""

// Test 5: List files with multiple extensions
display "Test 5: List .md and .toml files in current directory"
store docFiles as list files in "." with extensions [".md" and ".toml"]
display "Documentation and config files:"
for each item in docFiles:
    display "  " with item
end for
display ""

// Test 6: Use extension filter with variable
display "Test 6: Using extension variable"
store targetExt as ".txt"
store txtFiles as list files in "./TestPrograms" with extension targetExt
display "Text files in TestPrograms:"
for each item in txtFiles:
    display "  " with item
end for
display ""

// Test 7: Error handling for non-existent directory
display "Test 7: Error handling"
try:
    store badFiles as list files in "./non_existent_dir" recursively
    display "This should not execute"
when error:
    display "  âœ“ Correctly caught error for non-existent directory"
end try

display ""
display "=== All tests completed ==="