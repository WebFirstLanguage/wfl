name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt
      - name: Check formatting
        run: cargo fmt --all -- --check

  test:
    name: Test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.os }}
    needs: fmt
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}
      - name: Build
        run: cargo build --verbose --target ${{ matrix.target }}
      - name: Run Unit Tests
        run: cargo test --verbose --target ${{ matrix.target }}
      - name: Run Native Function Tests
        run: cargo test --verbose --target ${{ matrix.target }} --test native_function_tests
      - name: Run Integration Tests
        run: cargo test --verbose --target ${{ matrix.target }} --test combiner_port
      - name: Test Demo Scripts (Unix)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cargo run --target ${{ matrix.target }} -- examples/args_demo.wfl --help
          cargo run --target ${{ matrix.target }} -- examples/sort_demo.wfl
          cargo run --target ${{ matrix.target }} -- examples/path_demo.wfl
          cargo run --target ${{ matrix.target }} -- examples/dir_list_demo.wfl .
      - name: Test Demo Scripts (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cargo run --target ${{ matrix.target }} -- examples/args_demo.wfl --help
          cargo run --target ${{ matrix.target }} -- examples/sort_demo.wfl
          cargo run --target ${{ matrix.target }} -- examples/path_demo.wfl
          cargo run --target ${{ matrix.target }} -- examples/dir_list_demo.wfl .

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    needs: fmt
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy
      - name: Run Clippy
        run: cargo clippy --all-targets -- -D warnings
